inherit_from: .rubocop_todo.yml

require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  # 結果のsuggest部分を非表示にする
  SuggestExtensions: false
  # 最新のルールを適用する
  NewCops: enable
  # 何のルールに引っかかったか表示する
  DisplayCopNames: true
  # rubocopの対象外ファイル
  Exclude:
    - "Gemfile"
    - "bin/**/*"
    - "db/**/*"
    - "log/**/*"
    - "tmp/**/*"
    - "vendor/**/*"
    - "lib/tasks/auto_annotate_models.rake"
    - "config/environments/*"
    - "config/puma.rb"

### ルールのカスタマイズ

# 設定が厳しいので一旦全てfalseにする
Metrics:
  Enabled: false

# 一行あたりの文字数
Layout/LineLength:
  Enabled: false

# メソッドの改行ルール
Layout/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# 日本語にコメントを許可
Style/AsciiComments:
  Enabled: false

# クラスにコメントを残さなくても良い
Style/Documentation:
  Enabled: false

# コントローラ等のモジュールをネストしての宣言
Style/ClassAndModuleChildren:
  Enabled: false

# 文字列のfreeze（Ruby3からは自動でfreezeされるので要らない）
Style/FrozenStringLiteralComment:
  Enabled: false

# ガード節の提案（難しいので一旦false）
Style/GuardClause:
  Enabled: false

# 文字列のダブルクォートチェック
Style/StringLiterals:
  Enabled: false

# シンボルによる配列の%記法のチェック
Style/SymbolArray:
  Enabled: false
  # EnforcedStyle: brackets

# 文字列による配列の%記法のチェック
Style/WordArray:
  Enabled: false

# 変数名に数字を許可
Naming/VariableNumber:
  Enabled: false

# = と == の指摘
Lint/AssignmentInCondition:
  Enabled: false

# メソッド名等の命名の指摘
Naming/PredicateName:
  Enabled: false

# 未i18nのチェック（バリデーションエラーメッセージをi18nに登録するのはやや冗長？なためfalse）
Rails/I18nLocaleTexts:
  Enabled: false

# before_actionの際の未定義メソッドのチェック（deviseとの兼ね合いで一旦false）
Rails/LexicallyScopedActionFilter:
  Enabled: false

# Lazyを使っているか
Rails/I18nLazyLookup:
  Enabled: false

# アクションの順番
Rails/ActionOrder:
  Enabled: false

# DBとバリデーションの整合性
Rails/UniqueValidationWithoutIndex:
  Enabled: false

# あいまいは範囲指定
Lint/AmbiguousRange:
  Enabled: false

# 同じラインにコメントを書いていいか
Layout/ArgumentAlignment:
  Enabled: false

# ファイルパスの書き方
Rails/FilePath:
  Enabled: false

# 1行のラムダはリテラル構文使用
Style/Lambda:
  Enabled: false

# 使われていないブロックがある
Lint/UnusedBlockArgument:
  Enabled: false

# ハッシュリテラルの書き方
Layout/HashAlignment:
  Enabled: false

# 演算の優先順位が異なるものをかっこでくくる
Lint/AmbiguousOperatorPrecedence:
  Enabled: false

# 文字列補間を優先
Style/StringConcatenation:
  Enabled: false

# 冗長な並び替え
Lint/RedundantDirGlobSort:
  Enabled: false

Style/RedundantConstantBase:
  Enabled: false

Style/BlockComments:
  Enabled: false
